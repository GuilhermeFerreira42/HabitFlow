### Checklist de Desenvolvimento do HabitFlow 2.0

#### Fase 1: Melhorias de Confiança e Usabilidade Essencial

O objetivo desta fase é fortalecer a confiança do usuário na aplicação, dando-lhe controle total sobre seus dados, e refinar as interações mais comuns para torná-las mais intuitivas.

- [x] Módulo 1: Gerenciamento de Dados Baseado em Arquivos
  - [x] Tarefa 1.1: Implementar Backup em Arquivo
    - [x] Modificar o botão "Backup" na barra lateral.
    - [x] Criar uma função em JavaScript que leia todos os dados do `localStorage`.
    - [x] Converter o objeto de dados em uma string JSON formatada.
    - [x] Gerar um arquivo `.json` (ex: `habitflow_backup_data.json`) para download no navegador do usuário.
  - [x] Tarefa 1.2: Implementar Restauração via Arquivo
    - [x] Modificar o botão "Restaurar" para abrir um seletor de arquivos do sistema operacional.
    - [x] Criar uma função para ler o conteúdo do arquivo `.json` selecionado pelo usuário.
    - [x] Implementar uma validação para garantir que o arquivo tem a estrutura de dados esperada.
    - [x] Exibir um modal de confirmação final antes de sobrescrever os dados existentes.
    - [x] Substituir os dados no `localStorage` e recarregar a UI para refletir os novos dados.
  - [x] Tarefa 1.3: Aprimorar a Limpeza de Dados
    - [x] Garantir que o botão "Limpar Dados" acione um modal de confirmação claro e enfático sobre a perda permanente de dados.
    - [x] Ao confirmar, a função deve apagar completamente os dados do `localStorage` e reiniciar a aplicação ao seu estado inicial.

- [x] Módulo 2: Otimização da Interface de Anotações
  - [x] Tarefa 2.1: Unificar Logs e Anotações em uma Linha do Tempo Única
    - [x] Na "Página de Detalhes do Hábito", remover as seções separadas de "Logs Recentes" e "Anotações".
    - [x] Criar um novo componente de feed único chamado "Histórico do Hábito".
    - [x] Desenvolver a lógica em JavaScript para agregar os `logs` e as `notes` em um único array.
    - [x] Ordenar o array unificado em ordem cronológica decrescente (do mais recente para o mais antigo).
    - [x] Renderizar cada item no feed com um ícone e estilo distintos para diferenciar visualmente "Registros" de "Anotações".
  - [x] Tarefa 2.2: Implementar Texto Expansível nas Anotações Gerais
    - [x] Criar uma função que, ao renderizar as "Anotações Gerais", verifique o comprimento de cada nota.
    - [x] Se uma nota for longa, exibi-la de forma truncada (ex: primeiras 5 linhas).
    - [x] Adicionar um botão/link "Ver mais..." ao final do texto truncado.
    - [x] Implementar a lógica para expandir o texto completo ao clicar em "Ver mais..." e alterar o botão para "Ver menos".
    - [x] Garantir que a expansão e retração ocorram com uma transição suave de altura para uma melhor experiência visual.

#### Fase 2: Reformulação da Navegação e Visualização de Dados

O objetivo desta fase é transformar a maneira como o usuário navega pela aplicação e analisa seu progresso em larga escala, tornando a ferramenta mais ágil e poderosa.

- [x] Módulo 3: Navegação Direta via Barra Lateral
  - [x] Tarefa 3.1: Redesenhar a Barra Lateral para Incluir Hábitos
    - [x] Criar uma nova seção na barra lateral, abaixo dos links principais, chamada "Meus Hábitos".
    - [x] Desenvolver uma função que leia todos os hábitos e os renderize dinamicamente como uma lista de links nesta nova seção.
    - [x] Garantir que esta lista seja atualizada automaticamente quando um novo hábito for criado ou um existente for renomeado/excluído.
  - [x] Tarefa 3.2: Implementar a Navegação Direta
    - [x] Adicionar `event listeners` a cada link de hábito na barra lateral.
    - [x] Ao clicar em um hábito, a aplicação deve navegar diretamente para a "Página de Detalhes" daquele hábito específico, atualizando todo o conteúdo principal.

- [x] Módulo 4: Calendário Anual Detalhado
  - [x] Tarefa 4.1: Expandir o Layout do Calendário Anual
    - [x] Redesenhar a área do calendário para que, na visão "Ano", ele ocupe um espaço significativamente maior.
    - [x] Implementar uma grade (ex: 4x3) que exibirá 12 mini-calendários, um para cada mês.
    - [x] Cada mini-calendário deve mostrar uma grade de dias (7 colunas) com os números dos dias.
  - [x] Tarefa 4.2: Adicionar Interatividade e Destaques Visuais
    - [x] A lógica deve marcar visualmente (com uma cor ou fundo) os dias que possuem pelo menos um registro de atividade.
    - [x] Implementar um tooltip que aparece ao passar o mouse sobre um dia, mostrando a data completa.
    - [x] Fazer com que um clique em qualquer área de um mini-calendário (ex: no nome do mês) mude a visão da aplicação para o calendário mensal detalhado daquele mês e ano.

---

### Checklist de Desenvolvimento do HabitFlow 3.0

#### Fase 1: Correções Críticas e Melhorias de UX (Experiência do Usuário)

O objetivo desta fase é resolver os problemas mais impactantes da versão atual, como a falta de atualização dinâmica, bugs visuais e aprimoramentos de interação que tornarão o uso da aplicação mais fluido e agradável.

- [x] Módulo 1: Reatividade e Correções Visuais
  - [x] Tarefa 1.1: Corrigir Reatividade do Dashboard: Modificar as funções de adição/edição para que o dashboard (lista de hábitos) se atualize automaticamente, sem a necessidade de recarregar a página.
  - [x] Tarefa 1.2: Corrigir Overflow de Nomes de Hábitos: Aplicar CSS para que nomes de hábitos muito longos no dashboard não quebrem o layout do card (usando `ellipsis` para cortar o texto com "...").
  - [x] Tarefa 1.3: Corrigir Overflow de Anotações: Garantir que textos muito longos em anotações (seja na timeline ou nas anotações gerais) respeitem os limites do seu contêiner, quebrando a linha corretamente.
  - [x] Tarefa 1.4: Remover Contador de Sequência Global: Remover o contador de sequência do canto superior direito do dashboard, já que a informação já existe em cada card de hábito.

- [x] Módulo 2: Reorganização da Interface e UX
  - [x] Tarefa 2.1: Separar Logs e Anotações Novamente: Reverter a unificação na página de detalhes. Voltar a ter duas seções distintas: uma para "Registros de Atividade" (os logs) e outra para "Anotações do Hábito".
  - [x] Tarefa 2.2: Implementar Fechamento com a Tecla `ESC`: Adicionar um `event listener` global para que a tecla `ESC` feche os modais ativos (Ex: Novo Registro, Confirmação de Limpeza de Dados, etc.).
  - [x] Tarefa 2.3: Recarregar a Página Automaticamente: Modificar as funções `handleConfirmModalConfirm` para que, após uma restauração de backup ou limpeza de dados bem-sucedida, a página seja recarregada automaticamente (`location.reload()`).

#### Fase 2: Calendário e Registros Avançados

O objetivo desta fase é aprimorar drasticamente a principal ferramenta de interação do usuário: o calendário e o modal de registro, tornando-os mais informativos e funcionais.

- [x] Módulo 3: Melhorias Visuais no Calendário
  - [x] Tarefa 3.1: Adicionar Mini-Calendário no Dashboard: Em cada card de hábito no dashboard, incluir uma pequena visualização do calendário do mês atual, destacando os dias que foram registrados.
  - [x] Tarefa 3.2: Destacar o Dia Atual: Modificar as três visualizações de calendário (mini-calendário do dashboard, mensal e anual) para que o dia de hoje seja sempre destacado com um círculo ou cor diferente.

- [x] Módulo 4: "Super Modal" de Registro de Atividade
  - [x] Tarefa 4.1: Preencher Hora Atual Automaticamente: Ao abrir o modal de "Novo Registro", o campo de hora deve ser preenchido com a hora e o minuto atuais, em vez de "00:00".
  - [x] Tarefa 4.2: Listar Registros do Dia: Dentro do modal de registro, adicionar uma nova área que lista todos os registros já feitos para aquele dia específico.
  - [x] Tarefa 4.3: Implementar CRUD de Logs no Modal: Para cada registro listado na tarefa anterior, adicionar botões para "Editar" (permitindo alterar a hora) e "Excluir", tornando o modal uma central de gerenciamento completa para os registros daquele dia.

### Fase 2.5: Refinamentos de Usabilidade

O objetivo desta fase é refinar as funcionalidades implementadas na Fase 2 com base no seu feedback, melhorando a navegação, o contexto visual e a interatividade geral da aplicação.

- [x] Módulo 1: Navegação e Contexto dos Calendários
  - [x] Tarefa 1.1: Adicionar Título e Navegação ao Calendário Principal: Na página de detalhes do hábito, acima dos calendários (mensal e anual), adicionar um título claro (Ex: "Julho de 2025") e botões de "anterior" e "próximo" para permitir a navegação entre os meses (na visão mensal) ou anos (na visão anual).
  - [x] Tarefa 1.2: Adicionar Título ao Mini-Calendário: Em cada card de hábito no dashboard, exibir o nome do mês e o ano corrente acima do respectivo mini-calendário para que o usuário sempre saiba a que período a visualização se refere.

- [x] Módulo 2: Consistência de Interface e Experiência do Usuário
  - [x] Tarefa 2.1: Reativar Relógio Dinâmico de Sequência (Streak): Ajustar a função de formatação e o mecanismo de atualização para que o contador de sequência (streak) em cada card do dashboard volte a ser dinâmico, exibindo dias, horas, minutos e segundos em tempo real (ex: "2d 5h 12m 45s").
  - [x] Tarefa 2.2: Tornar Todo o Cartão de Hábito Clicável: Modificar os cards de hábito no dashboard para que o clique em qualquer área do cartão — incluindo o título, a contagem de registros e o mini-calendário — abra a página de detalhes do respectivo hábito, unificando a interação.

#### Fase 3: Dashboard Inteligente e Configurações

O objetivo desta fase é refinar a organização da aplicação, movendo funções administrativas para uma área dedicada e adicionando uma nova e poderosa ferramenta de visualização de anotações no dashboard.

- [x] Módulo 5: Central de Configurações
  - [x] Tarefa 5.1: Criar o Botão de Configurações: Na barra lateral, substituir os botões "Backup", "Restaurar" e "Limpar Dados" por um único botão "Configurações", com um ícone de engrenagem.
  - [x] Tarefa 5.2: Criar a Página/View de Configurações: Desenvolver uma nova view (página inteira) que será exibida ao clicar no botão de Configurações.
  - [x] Tarefa 5.3: Mover as Funções de Dados: Realocar os botões e a funcionalidade de Backup, Restauração e Limpeza de Dados para dentro desta nova página de Configurações.

- [x] Módulo 6: Seção de "Feed de Anotações" no Dashboard
  - [x] Tarefa 6.1: Criar a Estrutura da Seção: No dashboard, adicionar uma nova seção (por padrão, oculta) que servirá como um feed de todas as anotações.
  - [x] Tarefa 6.2: Implementar Botão de Mostrar/Ocultar: Adicionar um botão no dashboard para controlar a visibilidade desta seção.
  - [x] Tarefa 6.3: Desenvolver a Lógica de Agregação: Criar uma função que colete todas as anotações (gerais e de hábitos específicos) e as ordene cronologicamente. Cada anotação de hábito deve indicar de qual hábito ela veio (Ex: "Do hábito: Ler 10 páginas").
  - [x] Tarefa 6.4: Salvar Preferência do Usuário: Usar o `localStorage` para salvar o estado (visível ou oculto) da seção de anotações, para que a escolha do usuário persista mesmo após recarregar a página.

#### `[ ]` Módulo 7: Interatividade do Feed e Segurança

  - `[ ]` **Tarefa 7.1 (Segurança): Prevenir Interpretação de HTML:** Criar uma função para "escapar" texto inserido pelo usuário. Isso converterá caracteres especiais de HTML (como `<` e `>`) em suas entidades correspondentes (ex: `&lt;` e `&gt;`), impedindo que o navegador os interprete como código e corrija o bug que você descobriu.
  - `[ ]` **Tarefa 7.2 (Interatividade): Adicionar Links ao Feed de Anotações:** Modificar o feed no dashboard para que cada card de anotação seja clicável.
      - Se a anotação for de um **hábito específico**, o clique levará o usuário para a página de detalhes daquele hábito.
      - Se for uma **anotação geral**, o clique levará para a página de "Anotações Gerais".

#### `[X]` Módulo 8: Melhoria de Usabilidade na Edição

  - `[X]` **Tarefa 8.1 (Usabilidade): Aumentar Área de Edição de Anotações:** Aumentar o tamanho padrão da caixa de texto (`textarea`) no modal de edição para facilitar a escrita e revisão de anotações mais longas.

#### `[ ]` Módulo 9: Edição em Tela Cheia (Maximize/Restore)

  - `[ ]` **Tarefa 9.1: Remover Funcionalidade Anterior:** Antes de adicionar o novo recurso, vamos remover completamente a lógica de auto-redimensionamento da `textarea` para evitar conflitos.
  - `[ ]` **Tarefa 9.2: Adicionar Botão de Maximizar/Restaurar:** No cabeçalho do modal de edição (`#universalModal`), adicionar um novo botão que alternará entre os ícones de "maximizar" e "restaurar".
  - `[ ]` **Tarefa 9.3: Criar Estilos CSS para Tela Cheia:** Definir uma nova classe CSS (ex: `.modal-maximized`) que, quando aplicada, fará o modal se expandir para preencher toda a área de conteúdo principal (sem cobrir a barra lateral).
  - `[ ]` **Tarefa 9.4: Implementar Lógica de Alternância:** Adicionar o código JavaScript que gerencia o clique no novo botão, aplicando/removendo a classe CSS de maximização e trocando o ícone do botão.
